{"version":3,"sources":["components/Calculator.js","logic/operate.js","logic/calculate.js","App.js","index.js"],"names":["Calculator","this","props","obj","total","operation","next","className","class","id","name","onClick","handleClick","React","Component","operate","numberOne","numberTwo","one","Big","two","plus","toString","minus","times","div","err","mod","Error","calculate","buttonName","match","includes","parseFloat","App","state","target","result","setState","ReactDOM","render","document","getElementById","console","log"],"mappings":"wMAIMA,E,4JACJ,WACE,MAAmCC,KAAKC,MAAMC,IAAtCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,KAC1B,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKC,MAAM,UAAX,UAAsBJ,EAAtB,IAA8BC,EAA9B,IAA2CC,KAC3C,sBAAKC,UAAU,OAAf,UACE,wBAAQE,GAAG,QAAQC,KAAK,KAAKC,QAASV,KAAKC,MAAMU,YAAjD,gBACA,wBAAQH,GAAG,YAAYC,KAAK,MAAMC,QAASV,KAAKC,MAAMU,YAAtD,iBACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQJ,MAAM,WAAWE,KAAK,OAAIC,QAASV,KAAKC,MAAMU,YAAtD,kBACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQJ,MAAM,WAAWE,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAAtD,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQJ,MAAM,WAAWE,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAAtD,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQJ,MAAM,WAAWC,GAAG,OAAOC,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAAhE,eACA,wBAAQF,KAAK,IAAIH,UAAU,OAAOI,QAASV,KAAKC,MAAMU,YAAtD,eACA,wBAAQF,KAAK,IAAIC,QAASV,KAAKC,MAAMU,YAArC,eACA,wBAAQJ,MAAM,gBAAgBG,QAASV,KAAKC,MAAMU,YAAlD,yB,GAzBeC,IAAMC,WAgChBd,I,uBClCA,SAASe,EAAQC,EAAWC,EAAWZ,GACpD,IAAMa,EAAMC,IAAIH,GACVI,EAAMD,IAAIF,GAChB,GAAkB,MAAdZ,EACF,OAAOa,EAAIG,KAAKD,GAAKE,WAEvB,GAAkB,MAAdjB,EACF,OAAOa,EAAIK,MAAMH,GAAKE,WAExB,GAAkB,MAAdjB,EACF,OAAOa,EAAIM,MAAMJ,GAAKE,WAExB,GAAkB,SAAdjB,EACF,IACE,OAAOa,EAAIO,IAAIL,GAAKE,WACpB,MAAOI,GACP,MAAO,qBAGX,GAAkB,MAAdrB,EACF,OAAOa,EAAIS,IAAIP,GAAKE,WAEtB,MAAMM,MAAM,sBAAD,OAAuBvB,EAAvB,MCTE,SAASwB,EAAU1B,EAAK2B,GACrC,MAAmB,OAAfA,EACK,CACL1B,MAAO,KACPE,KAAM,KACND,UAAW,MAIFyB,EArBCC,MAAM,UAsBC,MAAfD,GAAmC,MAAb3B,EAAIG,KACrB,GAGLH,EAAIE,UACFF,EAAIG,KACC,2BAAKH,GAAZ,IAAiBG,KAAMH,EAAIG,KAAOwB,IAE7B,2BAAK3B,GAAZ,IAAiBG,KAAMwB,IAGrB3B,EAAIG,KACC,CACLA,KAAMH,EAAIG,KAAOwB,EACjB1B,MAAO,MAGJ,CACLE,KAAMwB,EACN1B,MAAO,MAIQ,MAAf0B,EACE3B,EAAIG,KACFH,EAAIG,KAAK0B,SAAS,KACb,eAAK7B,GAEP,2BAAKA,GAAZ,IAAiBG,KAAK,GAAD,OAAKH,EAAIG,KAAT,OAEnBH,EAAIE,UACC,CAAEC,KAAM,MAEbH,EAAIC,MACFD,EAAIC,MAAM4B,SAAS,KACd,GAEF,CAAE5B,MAAM,GAAD,OAAKD,EAAIC,MAAT,MAET,CAAEA,MAAO,MAGC,MAAf0B,EACE3B,EAAIG,MAAQH,EAAIE,UACX,CACLD,MAAOW,EAAQZ,EAAIC,MAAOD,EAAIG,KAAMH,EAAIE,WACxCC,KAAM,KACND,UAAW,MAIR,GAGU,QAAfyB,EACE3B,EAAIG,KACC,2BAAKH,GAAZ,IAAiBG,OAAQ,EAAI2B,WAAW9B,EAAIG,OAAOgB,aAEjDnB,EAAIC,MACC,2BAAKD,GAAZ,IAAiBC,QAAS,EAAI6B,WAAW9B,EAAIC,QAAQkB,aAEhD,GAYJnB,EAAIG,OAAQH,EAAIC,OAAUD,EAAIE,UAK/BF,EAAIE,UACFF,EAAIC,QAAUD,EAAIG,KACb,2BAAKH,GAAZ,IAAiBE,UAAWyB,IAGvB,CACL1B,MAAOW,EAAQZ,EAAIC,MAAOD,EAAIG,KAAMH,EAAIE,WACxCC,KAAM,KACND,UAAWyB,GAOV3B,EAAIG,KAKF,CACLF,MAAOD,EAAIG,KACXA,KAAM,KACND,UAAWyB,GAPJ,CAAEzB,UAAWyB,GApBb,2BAAK3B,GAAZ,IAAiBE,UAAWyB,I,IC/F1BI,E,4MACJC,MAAQ,CACNhC,IAAK,I,EAGPS,YAAc,YAAiB,IAAdwB,EAAa,EAAbA,OACTC,EAASR,EAAU,EAAKM,MAAMhC,IAAKiC,EAAO1B,MAChD,EAAK4B,SAAS,CAAEnC,IAAKkC,K,4CAGvB,WACE,OACE,cAAC,EAAD,CAAYzB,YAAaX,KAAKW,YAAaT,IAAKF,KAAKkC,MAAMhC,U,GAZ/CW,aAiBHoB,IClBfK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SACjDC,QAAQC,IAAIV,K","file":"static/js/main.fcffea02.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Calculator.css';\n\nclass Calculator extends React.Component {\n  render() {\n    const { total, operation, next } = this.props.obj;\n    return (\n      <div className='container'>\n        <div class=\"display\">{total} {operation} { next}</div>\n        <div className='keys'>\n          <button id=\"reset\" name=\"AC\" onClick={this.props.handleClick}>AC</button>\n          <button id=\"backspace\" name=\"+/-\" onClick={this.props.handleClick}>+/-</button>\n          <button name=\"%\" onClick={this.props.handleClick}>%</button>\n          <button class=\"operator\" name=\"รท\" onClick={this.props.handleClick}>รท</button>\n          <button name=\"7\" onClick={this.props.handleClick}>7</button>\n          <button name=\"8\" onClick={this.props.handleClick}>8</button>\n          <button name=\"9\" onClick={this.props.handleClick}>9</button>\n          <button class=\"operator\" name=\"x\" onClick={this.props.handleClick}>x</button>\n          <button name=\"4\" onClick={this.props.handleClick}>4</button>\n          <button name=\"5\" onClick={this.props.handleClick}>5</button>\n          <button name=\"6\" onClick={this.props.handleClick}>6</button>\n          <button class=\"operator\" name=\"-\" onClick={this.props.handleClick}>-</button>\n          <button name=\"1\" onClick={this.props.handleClick}>1</button>\n          <button name=\"2\" onClick={this.props.handleClick}>2</button>\n          <button name=\"3\" onClick={this.props.handleClick}>3</button>\n          <button class=\"operator\" id=\"plus\" name=\"+\" onClick={this.props.handleClick}>+</button>\n          <button name=\"0\" className=\"zero\" onClick={this.props.handleClick}>0</button>\n          <button name=\".\" onClick={this.props.handleClick}>.</button>\n          <button class=\"operator grid\" onClick={this.props.handleClick}>=</button>\n          </div>\n    </div>\n    );\n  }\n}\n\nexport default Calculator;","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}","import { Component } from 'react';\nimport Calculator from './components/Calculator';\nimport calculate from './logic/calculate';\n\nclass App extends Component {\n  state = {\n    obj: {},\n  }\n\n  handleClick = ({ target }) => {\n    const result = calculate(this.state.obj, target.name);\n    this.setState({ obj: result });\n  }\n\n  render() {\n    return (\n      <Calculator handleClick={this.handleClick} obj={this.state.obj} />\n    );\n  }\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nconsole.log(App);"],"sourceRoot":""}